/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Lamp_Cylinder: THREE.Mesh;
    Lamp_Cylinder_1: THREE.Mesh;
  };
  materials: {
    lampLight: THREE.MeshStandardMaterial;
    ["lampMetal.001"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/lamp1.gltf") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[15.59, 26.8, 12.98]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Lamp_Cylinder.geometry}
          material={materials.lampLight}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Lamp_Cylinder_1.geometry}
          material={materials["lampMetal.001"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/lamp1.gltf");
