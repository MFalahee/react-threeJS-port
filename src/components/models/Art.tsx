/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { awsModelPath } from "../../utils/awsModelPath";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube002: THREE.Mesh;
    Cube002_1: THREE.Mesh;
    Cube002_2: THREE.Mesh;
    Cube003: THREE.Mesh;
    Cube003_1: THREE.Mesh;
  };
  materials: {
    paintingImage1: THREE.MeshStandardMaterial;
    paintingWood: THREE.MeshPhysicalMaterial;
    blank: THREE.MeshStandardMaterial;
    paintingImage2: THREE.MeshStandardMaterial;
    black_paint: THREE.MeshStandardMaterial;
  };
};
let modelPath: string = "/models/art.gltf";
import.meta.env.PROD ? (modelPath = awsModelPath(modelPath)) : null;
export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(modelPath) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[31.06, 9.6, 36.42]}>
        <mesh
          geometry={nodes.Cube002.geometry}
          material={materials.paintingImage1}
        />
        <mesh
          geometry={nodes.Cube002_1.geometry}
          material={materials.paintingWood}
        />
        <mesh geometry={nodes.Cube002_2.geometry} material={materials.blank} />
      </group>
      <group position={[9.57, 7.53, 36.12]}>
        <mesh
          geometry={nodes.Cube003.geometry}
          material={materials.paintingImage2}
        />
        <mesh
          geometry={nodes.Cube003_1.geometry}
          material={materials.black_paint}
        />
      </group>
    </group>
  );
}

useGLTF.preload(modelPath);
