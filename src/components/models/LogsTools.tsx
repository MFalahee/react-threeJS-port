/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { awsModelPath } from "../../utils/awsModelPath";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube006: THREE.Mesh;
    Cube006_1: THREE.Mesh;
    logHolder: THREE.Mesh;
    logs: THREE.Mesh;
    Cylinder031: THREE.Mesh;
    Cylinder031_1: THREE.Mesh;
  };
  materials: {
    ["lampMetal.001"]: THREE.MeshStandardMaterial;
    BRUSH: THREE.MeshStandardMaterial;
    fpBlk: THREE.MeshStandardMaterial;
    wood: THREE.MeshStandardMaterial;
  };
};
let modelPath: string = "/models/logs_and_tools.gltf";
import.meta.env.PROD ? (modelPath = awsModelPath(modelPath)) : null;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(modelPath) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[25.66, 2.27, 35.78]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube006.geometry}
          material={materials["lampMetal.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube006_1.geometry}
          material={materials.BRUSH}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.logHolder.geometry}
        material={materials.fpBlk}
        position={[20.41, 1.65, 36.3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.logs.geometry}
        material={materials.wood}
        position={[20.19, 2.1, 36.27]}
      />
      <group position={[14.99, 1.86, 35.63]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder031.geometry}
          material={materials.wood}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder031_1.geometry}
          material={materials["lampMetal.001"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload(modelPath);
