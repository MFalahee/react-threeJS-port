/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Laptop_Cube009: THREE.Mesh;
    Laptop_Cube009_1: THREE.Mesh;
    Laptop_Cube009_2: THREE.Mesh;
    Laptop_Cube009_3: THREE.Mesh;
  };
  materials: {
    Buttons: THREE.MeshStandardMaterial;
    Def: THREE.MeshStandardMaterial;
    Scerrn: THREE.MeshStandardMaterial;
    laptopScreen: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/laptop.gltf") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[25.85, 3.44, 11.71]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Laptop_Cube009.geometry}
          material={materials.Buttons}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Laptop_Cube009_1.geometry}
          material={materials.Def}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Laptop_Cube009_2.geometry}
          material={materials.Scerrn}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Laptop_Cube009_3.geometry}
          material={materials.laptopScreen}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/laptop.gltf");
