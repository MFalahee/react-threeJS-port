/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { awsModelPath } from "../../utils/awsModelPath";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    BASE_Cube: THREE.Mesh;
    BASE_Cube_1: THREE.Mesh;
    BASE_Cube_2: THREE.Mesh;
    BASE_Cube_3: THREE.Mesh;
    BASE_Cube_4: THREE.Mesh;
    BASE_Cube_5: THREE.Mesh;
    BASE_Cube_6: THREE.Mesh;
    BASE_Cube001: THREE.Mesh;
    BASE_Cube001_1: THREE.Mesh;
    BASE_Cube001_2: THREE.Mesh;
    BASE_Cube001_3: THREE.Mesh;
    BASE_Cube001_4: THREE.Mesh;
    BASE_Cube001_5: THREE.Mesh;
    BASE_Cube001_6: THREE.Mesh;
    Circle001: THREE.Mesh;
    Circle001_1: THREE.Mesh;
    Circle001_2: THREE.Mesh;
    Circle001_3: THREE.Mesh;
    Circle: THREE.Mesh;
    Circle_1: THREE.Mesh;
    Circle007: THREE.Mesh;
    Circle007_1: THREE.Mesh;
    Circle007_2: THREE.Mesh;
    Circle007_3: THREE.Mesh;
    Circle007_4: THREE.Mesh;
    Circle007_5: THREE.Mesh;
    Circle007_6: THREE.Mesh;
    Circle007_7: THREE.Mesh;
    Circle007_8: THREE.Mesh;
    Circle007_9: THREE.Mesh;
    Circle007_10: THREE.Mesh;
    Circle007_11: THREE.Mesh;
    Circle007_12: THREE.Mesh;
  };
  materials: {
    ["Material.012"]: THREE.MeshStandardMaterial;
    ["Material.013"]: THREE.MeshStandardMaterial;
    ["Material.014"]: THREE.MeshStandardMaterial;
    ["Material.015"]: THREE.MeshStandardMaterial;
    None: THREE.MeshStandardMaterial;
    ["Material.016"]: THREE.MeshStandardMaterial;
    ["Material.017"]: THREE.MeshStandardMaterial;
    black_paint: THREE.MeshStandardMaterial;
    goggleLens: THREE.MeshStandardMaterial;
    swimCap: THREE.MeshStandardMaterial;
    speedologo: THREE.MeshStandardMaterial;
    frisbeeOutline: THREE.MeshStandardMaterial;
    frisbeeCenter: THREE.MeshStandardMaterial;
    ["Material.009"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    microrogi: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    usb: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.008"]: THREE.MeshStandardMaterial;
    ["Material.010"]: THREE.MeshStandardMaterial;
    ["Material.011"]: THREE.MeshStandardMaterial;
  };
};
let modelPath: string = "/models/bookshelf_items.gltf";
import.meta.env.PROD ? (modelPath = awsModelPath(modelPath)) : null;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(modelPath) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[1.67, 4.56, 12.12]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube.geometry}
          material={materials["Material.012"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube_1.geometry}
          material={materials["Material.013"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube_2.geometry}
          material={materials["Material.014"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube_3.geometry}
          material={materials["Material.015"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube_4.geometry}
          material={materials.None}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube_5.geometry}
          material={materials["Material.016"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube_6.geometry}
          material={materials["Material.017"]}
        />
      </group>
      <group position={[0.88, 4.51, 13.36]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube001.geometry}
          material={materials["Material.012"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube001_1.geometry}
          material={materials["Material.013"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube001_2.geometry}
          material={materials["Material.014"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube001_3.geometry}
          material={materials["Material.015"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube001_4.geometry}
          material={materials.None}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube001_5.geometry}
          material={materials["Material.016"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BASE_Cube001_6.geometry}
          material={materials["Material.017"]}
        />
      </group>
      <group position={[1.17, 7.14, 16.04]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle001.geometry}
          material={materials.black_paint}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle001_1.geometry}
          material={materials.goggleLens}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle001_2.geometry}
          material={materials.swimCap}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle001_3.geometry}
          material={materials.speedologo}
        />
      </group>
      <group position={[1.33, 10.24, 11.82]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle.geometry}
          material={materials.frisbeeOutline}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle_1.geometry}
          material={materials.frisbeeCenter}
        />
      </group>
      <group position={[1.64, 13.34, 16.8]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007.geometry}
          material={materials["Material.009"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_1.geometry}
          material={materials["Material.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_2.geometry}
          material={materials["Material.002"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_3.geometry}
          material={materials["Material.003"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_4.geometry}
          material={materials.microrogi}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_5.geometry}
          material={materials["Material.004"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_6.geometry}
          material={materials.usb}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_7.geometry}
          material={materials["Material.007"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_8.geometry}
          material={materials["Material.006"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_9.geometry}
          material={materials["Material.005"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_10.geometry}
          material={materials["Material.008"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_11.geometry}
          material={materials["Material.010"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle007_12.geometry}
          material={materials["Material.011"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload(modelPath);
