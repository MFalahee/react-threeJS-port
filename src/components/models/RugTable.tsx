/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { awsModelPath } from "../../utils/awsModelPath";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    rug: THREE.Mesh;
    coffetable: THREE.Mesh;
  };
  materials: {
    rug: THREE.MeshStandardMaterial;
    tabletop: THREE.MeshStandardMaterial;
  };
};

let modelPath: string = "/models/rug_and_table.gltf";
import.meta.env.PROD ? (modelPath = awsModelPath(modelPath)) : null;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(modelPath) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.rug.geometry}
        material={materials.rug}
        position={[25, 0.75, 9.53]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.coffetable.geometry}
        material={materials.tabletop}
        position={[24.5, 2.23, 13.79]}
      />
    </group>
  );
}

useGLTF.preload(modelPath);
