/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { awsModelPath } from "../../utils/awsModelPath";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Leg_Cylinder009: THREE.Mesh;
    Leg_Cylinder009_1: THREE.Mesh;
    Leg_Cylinder009_2: THREE.Mesh;
    Leg_Cylinder009_3: THREE.Mesh;
  };
  materials: {
    couchbrown: THREE.MeshStandardMaterial;
    couchgreen: THREE.MeshStandardMaterial;
    wood: THREE.MeshStandardMaterial;
    couchbrtop: THREE.MeshStandardMaterial;
  };
};
let modelPath: string = "/models/couch.gltf";
import.meta.env.PROD ? (modelPath = awsModelPath(modelPath)) : null;
export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(modelPath) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[27.44, 4.95, 4.85]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Leg_Cylinder009.geometry}
          material={materials.couchbrown}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Leg_Cylinder009_1.geometry}
          material={materials.couchgreen}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Leg_Cylinder009_2.geometry}
          material={materials.wood}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Leg_Cylinder009_3.geometry}
          material={materials.couchbrtop}
        />
      </group>
    </group>
  );
}

useGLTF.preload(modelPath);
