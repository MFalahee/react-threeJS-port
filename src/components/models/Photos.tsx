/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef, useEffect, useMemo } from "react";
import { photoHandler } from "../../utils/photoHandler";
import { Select } from "@react-three/postprocessing";
import { awsModelPath } from "../../utils/awsModelPath";
import { useGLTF, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube010: THREE.Mesh;
    Cube010_1: THREE.Mesh;
    Cube009: THREE.Mesh;
    Cube009_1: THREE.Mesh;
    Cube011: THREE.Mesh;
    Cube011_1: THREE.Mesh;
    Plane: THREE.Mesh;
    Cube015: THREE.Mesh;
    Cube015_1: THREE.Mesh;
    Plane004: THREE.Mesh;
    Plane002: THREE.Mesh;
    Cube016: THREE.Mesh;
    Cube016_1: THREE.Mesh;
    Cube014: THREE.Mesh;
    Cube014_1: THREE.Mesh;
    Plane007: THREE.Mesh;
    Plane005: THREE.Mesh;
    Plane008: THREE.Mesh;
    Cube017: THREE.Mesh;
    Cube017_1: THREE.Mesh;
    Plane001: THREE.Mesh;
    Plane003: THREE.Mesh;
    Plane006: THREE.Mesh;
    Cube: THREE.Mesh;
    Cube_1: THREE.Mesh;
  };
  materials: {
    bookbinding1: THREE.MeshStandardMaterial;
    photoImg2: THREE.MeshStandardMaterial;
    bookbinding7: THREE.MeshStandardMaterial;
    photoImg1: THREE.MeshStandardMaterial;
    ["text.001"]: THREE.MeshStandardMaterial;
    photoImg3: THREE.MeshStandardMaterial;
    bookbinding2: THREE.MeshStandardMaterial;
    photoImg5: THREE.MeshStandardMaterial;
    bookbinding3: THREE.MeshStandardMaterial;
    photoImg6: THREE.MeshStandardMaterial;
    ["metal.003"]: THREE.MeshStandardMaterial;
    photoImg4: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
    photoImg7: THREE.MeshStandardMaterial;
    photoImg0: THREE.MeshStandardMaterial;
  };
};

let modelPath: string = "/models/photos.gltf";
import.meta.env.PROD ? (modelPath = awsModelPath(modelPath)) : null;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(modelPath) as GLTFResult;

  // create the photos
  const photoSources = photoHandler();
  const photoTextures = useTexture(photoSources) as THREE.Texture[];
  const photoMaterials = useMemo(() => {
    if (!photoTextures || photoTextures.length === 0) {
      return [];
    }
    return photoTextures.map((texture) => {
      if (!texture) return new THREE.MeshBasicMaterial({ color: 0x000000 });
      texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
      texture.rotation = Math.PI / 2;
      texture.minFilter = THREE.LinearFilter;
      return new THREE.MeshBasicMaterial({ map: texture });
    });
  }, [photoTextures]);
  return (
    <group {...props} dispose={null}>
      {/* bookshelf left photos */}
      {/* top to bottom, left to right */}
      <mesh
        geometry={nodes.Plane.geometry}
        material={photoMaterials[0]}
        position={[1.93, 12.55, 25.12]}
      />
      <mesh
        geometry={nodes.Plane006.geometry}
        material={photoMaterials[6]}
        position={[1.82, 10.34, 25.18]}
      />

      <mesh
        geometry={nodes.Plane008.geometry}
        material={photoMaterials[8]}
        position={[1.5, 10, 23.07]}
      />
      <mesh
        geometry={nodes.Plane007.geometry}
        material={photoMaterials[7]}
        position={[1.34, 9.82, 21.4]}
      />
      {/* bookshelf right photos */}
      <mesh
        geometry={nodes.Plane001.geometry}
        material={photoMaterials[1]}
        position={[2.2, 12.56, 13.19]}
      />
      <mesh
        geometry={nodes.Plane003.geometry}
        material={photoMaterials[3]}
        position={[2.28, 10.09, 15.95]}
        rotation={[0, -0.01, 0]}
      />
      <mesh
        geometry={nodes.Plane002.geometry}
        material={photoMaterials[2]}
        position={[2.14, 7.7, 12.85]}
      />
      <mesh
        geometry={nodes.Plane005.geometry}
        scale={1}
        material={photoMaterials[5]}
        position={[1.72, 5.27, 16.18]}
      />
      {/* frames */}

      <Select enabled>
        <group position={[1.86, 12.54, 25.13]}>
          <mesh
            geometry={nodes.Cube010.geometry}
            material={materials.bookbinding1}
          />
          <mesh
            geometry={nodes.Cube010_1.geometry}
            material={materials.photoImg2}
          />
        </group>
        <group position={[1.76, 10.34, 25.19]}>
          <mesh
            geometry={nodes.Cube009.geometry}
            material={materials.bookbinding7}
          />
          <mesh
            geometry={nodes.Cube009_1.geometry}
            material={materials.photoImg1}
          />
        </group>
        <group position={[1.43, 10, 23.09]}>
          <mesh
            geometry={nodes.Cube011.geometry}
            material={materials["text.001"]}
          />
          <mesh
            geometry={nodes.Cube011_1.geometry}
            material={materials.photoImg3}
          />
        </group>
        <group position={[2.03, 7.69, 12.83]}>
          <mesh
            geometry={nodes.Cube015.geometry}
            material={materials.bookbinding2}
          />
          <mesh
            geometry={nodes.Cube015_1.geometry}
            material={materials.photoImg5}
          />
        </group>
        <group position={[2.2, 10.07, 15.98]}>
          <mesh
            geometry={nodes.Cube016.geometry}
            material={materials.bookbinding3}
          />
          <mesh
            geometry={nodes.Cube016_1.geometry}
            material={materials.photoImg6}
          />
        </group>
        <group position={[1.3, 9.82, 21.4]}>
          <mesh
            geometry={nodes.Cube014.geometry}
            material={materials["metal.003"]}
          />
          <mesh
            geometry={nodes.Cube014_1.geometry}
            material={materials.photoImg4}
          />
        </group>

        <group position={[2.12, 12.55, 13.19]}>
          <mesh
            geometry={nodes.Cube017.geometry}
            material={materials["Material.006"]}
          />
          <mesh
            geometry={nodes.Cube017_1.geometry}
            material={materials.photoImg7}
          />
        </group>
        <group position={[1.64, 5.27, 16.18]}>
          <mesh geometry={nodes.Cube.geometry} material={materials.photoImg0} />
          <mesh
            geometry={nodes.Cube_1.geometry}
            material={materials.bookbinding1}
          />
        </group>
      </Select>
    </group>
  );
}

useGLTF.preload(modelPath);
